'''
Module for 'update' information generated by mkexp tool.

$Id$
'''

import os
import re

import expargparse

class Update:
    '''Object containing 'update' information generated by mkexp tool
    '''
    def __init__(self, update_name):

        # Experiment configuration

        self.config_dir = None
        self.mkexp_args = None

        # Read data from update file

        update_file = open(update_name)

        for line in update_file:
            match = re.match(r"^cd '(.*)'$", line)
            if match:
                self.config_dir = match.group(1)
            else:
                match = re.match(r"^exec '.*?' '(.*)'", line)
                if match:
                    # Check mkexp command line
                    mkexp_line = expargparse.MkexpArgumentParser() 
                    self.mkexp_args = \
                        mkexp_line.parse_args(match.group(1).split("' '"))

        update_file.close()

    def get_config_dir(self):
        return self.config_dir

    def get_config_file(self):
        config_file = self.mkexp_args.config
        if not os.path.isabs(config_file):
            config_file = os.path.join(self.config_dir, config_file)
        return config_file

    def get_config_dicts(self):
        return expargparse.assigns_to_dicts(self.mkexp_args)

